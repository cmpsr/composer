name: "Publish - Canary"

on:
  pull_request:
    types:
      - labeled
      - synchronize

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release-snapshot:
    if: ${{ (github.event.label.name == 'release-canary') || (github.event.action == 'synchronize' && contains(github.event.pull_request.labels.*.name, 'release-canary')) }}
    name: Release Snapshot
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@main
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Setup Node.js 18.x
        uses: actions/setup-node@main
        with:
          node-version: 18.x

      - name: Restore lerna
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('./yarn.lock') }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('./yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install modules
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn

      - name: Check for changeset
        shell: bash
        run: |
          set -eu -o pipefail
          echo "Determining packages to be released..."
          CHANGESETS=$(yarn changeset status --since=origin/master | grep "@cmpsr" | cut -d' ' -f4)
          echo "$CHANGESETS"
          echo -e "\n"

      - name: Generate Branch Name
        run: |
          echo "Branch name ${GITHUB_REF_NAME//\//-}"
          echo "BRANCH_NAME=${GITHUB_REF_NAME//\//-}" >> $GITHUB_ENV

      - name: Create Snapshot version
        run: yarn changeset version --snapshot ${BRANCH_NAME}
        env:
          BRANCH_NAME: ${{ env.BRANCH_NAME }}

      - name: Build Packages
        run: yarn build

      - name: Emit Types
        run: yarn type:emit

      - name: Publish Snapshot version
        id: changesets
        uses: changesets/action@v1
        with:
          publish: yarn changeset publish --tag ${BRANCH_NAME} --no-git-tag
        env:
          BRANCH_NAME: ${{ env.BRANCH_NAME }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create PR comment with published canary versions
        id: get-canaries
        run: |
          packageVersions=$( echo '${{ steps.changesets.outputs.publishedPackages }}' | jq -r -c 'map([.name,.version]) | map(join("@")) | join("\n")' )
          echo "Package Versions: ${packageVersions} -> ${{ steps.changesets.outputs.publishedPackages }} -> ${ steps.changesets.outputs.publishedPackages }"
          canariesComment=$(echo "Latest Canary Releases for this pull request:\n\n${packageVersions}" )
          echo -e "${canariesComment}" > msg
          export msg=$(cat msg)
          gh pr comment ${{ github.event.number }} --body "$msg"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
