"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getChildren = void 0;

var _react = require("react");

var _client = require("@apollo/client");

var _context = require("../../../../context");

var _renderFromContentfulModel = _interopRequireDefault(require("../../../../utils/renderFromContentfulModel"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SectionByIdQuery = { kind: "Document", definitions: [{ kind: "OperationDefinition", operation: "query", name: { kind: "Name", value: "SectionByIdQuery" }, variableDefinitions: [{ kind: "VariableDefinition", variable: { kind: "Variable", name: { kind: "Name", value: "id" } }, type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } }, directives: [] }], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "section" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "id" }, value: { kind: "Variable", name: { kind: "Name", value: "id" } } }], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "sys" }, arguments: [], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" }, arguments: [], directives: [] }] } }, { kind: "Field", name: { kind: "Name", value: "title" }, arguments: [], directives: [] }, { kind: "Field", name: { kind: "Name", value: "subtitle" }, arguments: [], directives: [] }, { kind: "Field", name: { kind: "Name", value: "style" }, arguments: [], directives: [] }, { kind: "Field", name: { kind: "Name", value: "type" }, arguments: [], directives: [] }, { kind: "Field", name: { kind: "Name", value: "contentCollection" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "limit" }, value: { kind: "IntValue", value: "20" } }], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "items" }, arguments: [], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "BodyCopy" }, directives: [] }, { kind: "FragmentSpread", name: { kind: "Name", value: "Experiment" }, directives: [] }, { kind: "FragmentSpread", name: { kind: "Name", value: "Feature" }, directives: [] }, { kind: "FragmentSpread", name: { kind: "Name", value: "Footer" }, directives: [] }, { kind: "FragmentSpread", name: { kind: "Name", value: "Grid" }, directives: [] }, { kind: "FragmentSpread", name: { kind: "Name", value: "Header" }, directives: [] }, { kind: "FragmentSpread", name: { kind: "Name", value: "Hero" }, directives: [] }] } }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "BodyCopy" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "BodyCopy" } }, directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "sys" }, arguments: [], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" }, arguments: [], directives: [] }] } }, { kind: "Field", name: { kind: "Name", value: "type" }, arguments: [], directives: [] }, { kind: "Field", name: { kind: "Name", value: "style" }, arguments: [], directives: [] }, { kind: "Field", name: { kind: "Name", value: "copy" }, arguments: [], directives: [] }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Experiment" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Experiment" } }, directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "sys" }, arguments: [], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" }, arguments: [], directives: [] }] } }, { kind: "Field", name: { kind: "Name", value: "variants" }, arguments: [], directives: [] }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Feature" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Feature" } }, directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "sys" }, arguments: [], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" }, arguments: [], directives: [] }] } }, { kind: "Field", name: { kind: "Name", value: "title" }, arguments: [], directives: [] }, { kind: "Field", name: { kind: "Name", value: "type" }, arguments: [], directives: [] }, { kind: "Field", name: { kind: "Name", value: "embeddedType" }, arguments: [], directives: [] }, { kind: "Field", name: { kind: "Name", value: "eyebrow" }, arguments: [], directives: [] }, { kind: "Field", name: { kind: "Name", value: "subtitle" }, arguments: [], directives: [] }, { kind: "Field", name: { kind: "Name", value: "desktopAsset" }, arguments: [], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Asset" }, directives: [] }] } }, { kind: "Field", name: { kind: "Name", value: "mobileAsset" }, arguments: [], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Asset" }, directives: [] }] } }, { kind: "Field", name: { kind: "Name", value: "embeddedAsset" }, arguments: [], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Asset" }, directives: [] }] } }, { kind: "Field", name: { kind: "Name", value: "style" }, arguments: [], directives: [] }, { kind: "Field", name: { kind: "Name", value: "contentCollection" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "limit" }, value: { kind: "IntValue", value: "3" } }], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "items" }, arguments: [], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Link" }, directives: [] }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Footer" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Footer" } }, directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "sys" }, arguments: [], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" }, arguments: [], directives: [] }] } }, { kind: "Field", name: { kind: "Name", value: "copy" }, arguments: [], directives: [] }, { kind: "Field", name: { kind: "Name", value: "style" }, arguments: [], directives: [] }, { kind: "Field", name: { kind: "Name", value: "type" }, arguments: [], directives: [] }, { kind: "Field", name: { kind: "Name", value: "logo" }, arguments: [], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Link" }, directives: [] }] } }, { kind: "Field", name: { kind: "Name", value: "contentCollection" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "limit" }, value: { kind: "IntValue", value: "10" } }], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "items" }, arguments: [], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Link" }, directives: [] }, { kind: "FragmentSpread", name: { kind: "Name", value: "Grid" }, directives: [] }] } }] } }, { kind: "Field", name: { kind: "Name", value: "secondaryContentCollection" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "limit" }, value: { kind: "IntValue", value: "10" } }], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "items" }, arguments: [], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Link" }, directives: [] }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Grid" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Grid" } }, directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "sys" }, arguments: [], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" }, arguments: [], directives: [] }] } }, { kind: "Field", name: { kind: "Name", value: "style" }, arguments: [], directives: [] }, { kind: "Field", name: { kind: "Name", value: "type" }, arguments: [], directives: [] }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Header" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Header" } }, directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "sys" }, arguments: [], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" }, arguments: [], directives: [] }] } }, { kind: "Field", name: { kind: "Name", value: "style" }, arguments: [], directives: [] }, { kind: "Field", name: { kind: "Name", value: "type" }, arguments: [], directives: [] }, { kind: "Field", name: { kind: "Name", value: "logo" }, arguments: [], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Link" }, directives: [] }] } }, { kind: "Field", name: { kind: "Name", value: "contentCollection" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "limit" }, value: { kind: "IntValue", value: "10" } }], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "items" }, arguments: [], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Link" }, directives: [] }, { kind: "FragmentSpread", name: { kind: "Name", value: "Grid" }, directives: [] }] } }] } }, { kind: "Field", name: { kind: "Name", value: "secondaryContentCollection" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "limit" }, value: { kind: "IntValue", value: "10" } }], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "items" }, arguments: [], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Link" }, directives: [] }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Hero" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Hero" } }, directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "sys" }, arguments: [], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" }, arguments: [], directives: [] }] } }, { kind: "Field", name: { kind: "Name", value: "title" }, arguments: [], directives: [] }, { kind: "Field", name: { kind: "Name", value: "type" }, arguments: [], directives: [] }, { kind: "Field", name: { kind: "Name", value: "eyebrow" }, arguments: [], directives: [] }, { kind: "Field", name: { kind: "Name", value: "subtitle" }, arguments: [], directives: [] }, { kind: "Field", name: { kind: "Name", value: "desktopAsset" }, arguments: [], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Asset" }, directives: [] }] } }, { kind: "Field", name: { kind: "Name", value: "mobileAsset" }, arguments: [], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Asset" }, directives: [] }] } }, { kind: "Field", name: { kind: "Name", value: "style" }, arguments: [], directives: [] }, { kind: "Field", name: { kind: "Name", value: "contentCollection" }, arguments: [{ kind: "Argument", name: { kind: "Name", value: "limit" }, value: { kind: "IntValue", value: "3" } }], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "items" }, arguments: [], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Link" }, directives: [] }] } }] } }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Asset" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Asset" } }, directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "contentType" }, arguments: [], directives: [] }, { kind: "Field", name: { kind: "Name", value: "title" }, arguments: [], directives: [] }, { kind: "Field", name: { kind: "Name", value: "url" }, arguments: [], directives: [] }] } }, { kind: "FragmentDefinition", name: { kind: "Name", value: "Link" }, typeCondition: { kind: "NamedType", name: { kind: "Name", value: "Link" } }, directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "sys" }, arguments: [], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "id" }, arguments: [], directives: [] }] } }, { kind: "Field", name: { kind: "Name", value: "asset" }, arguments: [], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "Asset" }, directives: [] }] } }, { kind: "Field", name: { kind: "Name", value: "title" }, arguments: [], directives: [] }, { kind: "Field", name: { kind: "Name", value: "type" }, arguments: [], directives: [] }, { kind: "Field", name: { kind: "Name", value: "embeddedType" }, arguments: [], directives: [] }, { kind: "Field", name: { kind: "Name", value: "route" }, arguments: [], directives: [], selectionSet: { kind: "SelectionSet", selections: [{ kind: "Field", name: { kind: "Name", value: "slug" }, arguments: [], directives: [] }] } }, { kind: "Field", name: { kind: "Name", value: "style" }, arguments: [], directives: [] }, { kind: "Field", name: { kind: "Name", value: "url" }, arguments: [], directives: [] }] } }], loc: { start: 0, end: 668, source: { body: "#import \"../../BodyCopy/fragments/BodyCopy.graphql\"\n#import \"../../Experiment/fragments/Experiment.graphql\"\n#import \"../../Feature/fragments/Feature.graphql\"\n#import \"../../Footer/fragments/Footer.graphql\"\n#import \"../../Grid/fragments/Grid.graphql\"\n#import \"../../Header/fragments/Header.graphql\"\n#import \"../../Hero/fragments/Hero.graphql\"\n\nquery SectionByIdQuery($id: String!) {\n  section(id: $id) {\n    sys {\n      id\n    }\n    title\n    subtitle\n    style\n    type\n    contentCollection(limit: 20) {\n      items {\n        ...BodyCopy\n        ...Experiment\n        ...Feature\n        ...Footer\n        ...Grid\n        ...Header\n        ...Hero\n      }\n    }\n  }\n}\n", name: "GraphQL request", locationOffset: { line: 1, column: 1 } } } };

const getChildren = ({
  id
}) => {
  const contentfulContext = (0, _react.useContext)(_context.ContentfulContext);
  const {
    data
  } = (0, _client.useQuery)(SectionByIdQuery, {
    variables: {
      id
    }
  });
  if (!data) return null;
  const contentItems = data.section.contentCollection.items.map((item, index) => (0, _renderFromContentfulModel.default)(contentfulContext, item, index, id));
  return contentItems;
};

exports.getChildren = getChildren;